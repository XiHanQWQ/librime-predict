name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:  # 允许手动触发

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout last commit
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Install clang-format
        run: sudo apt install -y clang-format curl
      - name: Lint
        run: find src tools -name '*.cc' -o -name '*.h' | xargs clang-format -Werror --dry-run || { echo Please lint your code by '"'"find src tools -name '*.cc' -o -name '*.h' | xargs clang-format -i"'"'.; false; }

  build:
    runs-on: ubuntu-24.04
    needs: lint
    steps:
      - name: Checkout librime
        uses: actions/checkout@v5
        with:
          repository: rime/librime

      - name: Checkout current repository with full history
        uses: actions/checkout@v5
        with:
          path: plugins/predict
          fetch-depth: 0

      - name: Install dependency
        run: ./action-install-linux.sh

      - name: Build librime with plugin (without ASan)
        run: |
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DENABLE_ASAN=OFF
          cmake --build build

      - name: Check if data directory exists
        run: |
          ls -la plugins/predict/data/
          if [ -f "plugins/predict/data/predict.txt" ]; then
            echo "predict.txt found"
          else
            echo "predict.txt not found, listing data directory:"
            find plugins/predict/data/ -type f
            exit 1
          fi

      - name: Build predict.db from local data
        working-directory: build/bin
        run: |
          # 从本仓库的 data 目录复制 predict.txt
          cp ../../plugins/predict/data/predict.txt ./
          echo "File size: $(wc -l < predict.txt) lines"
          
          # 使用文件输入而不是管道，避免 Broken pipe 错误
          ../plugins/predict/bin/build_predict < predict.txt
          
          # 检查是否成功生成数据库
          if [ -f "predict.db" ]; then
            echo "predict.db successfully created"
            ls -la predict.db
          else
            echo "Error: predict.db was not created"
            exit 1
          fi

      - name: Create release using modern action
        uses: softprops/action-gh-release@v2
        if: success()
        with:
          tag_name: predict-db-${{ github.run_id }}-${{ github.run_attempt }}
          name: Predict DB (${{ github.sha }})
          body: |
            Auto-generated predict.db from CI build
            - Commit: ${{ github.sha }}
            - Run ID: ${{ github.run_id }}
          draft: false
          prerelease: false
          files: |
            build/bin/predict.db
            build/bin/predict.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact (backup)
        uses: actions/upload-artifact@v4
        with:
          name: predict-db-${{ github.run_id }}
          path: |
            build/bin/predict.db
            build/bin/predict.txt
          retention-days: 30
